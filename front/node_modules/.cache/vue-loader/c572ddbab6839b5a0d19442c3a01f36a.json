{"remainingRequest":"/Users/jacobreburn/Development/govreader/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jacobreburn/Development/govreader/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jacobreburn/Development/govreader/src/App.vue","mtime":1583678940723},{"path":"/Users/jacobreburn/Development/govreader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jacobreburn/Development/govreader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jacobreburn/Development/govreader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jacobreburn/Development/govreader/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovL2ltcG9ydCBYbWxUb0pzb24gZnJvbSAneG1sMmpzb24nCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCgogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIGZlZWQ6IHt9CiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKCiAgICBjb25zdCBSU1NfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA5MC9pbmRleC5waHAnOwoKICAgIGZldGNoKCBSU1NfVVJMICkKICAgICAgICAudGhlbiggcmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpICkKICAgICAgICAudGhlbiggcmVzcG9uc2VUZXh0ID0+IG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHJlc3BvbnNlVGV4dCwgInRleHQveG1sIikgKQogICAgICAgIC8vLnRoZW4oIGRvbURvY3VtZW50ID0+IHRoaXMuZmVlZCA9IFhtbFRvSnNvbi50b0pzb24oZG9tRG9jdW1lbnQpICkKICB9LAoKICBjb21wdXRlZDogewogICAgZmVlZFVwZGF0ZWQ6IGZ1bmN0aW9uKCl7CiAgICAgIHJldHVybiB0aGlzLmZlZWQgPyB0aGlzLmZlZWQudXBkYXRlZCA6IG51bGwKICAgIH0sCiAgICBmZWVkRW50cmllczogZnVuY3Rpb24oKXsKICAgICAgcmV0dXJuIHRoaXMuZmVlZCA/IHRoaXMuZmVlZC5lbnRyeSA6IG51bGwKICAgIH0KICB9Cn0KCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <ul>\n      <li v-for=\"e in feedEntries\" :key=\"e.id\">{{e.title}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\n  //import XmlToJson from 'xml2json'\n\n  export default {\n    name: 'App',\n\n    data(){\n      return {\n        feed: {}\n      }\n    },\n\n    mounted() {\n\n      const RSS_URL = 'http://localhost:8090/index.php';\n\n      fetch( RSS_URL )\n          .then( response => response.text() )\n          .then( responseText => new window.DOMParser().parseFromString(responseText, \"text/xml\") )\n          //.then( domDocument => this.feed = XmlToJson.toJson(domDocument) )\n    },\n\n    computed: {\n      feedUpdated: function(){\n        return this.feed ? this.feed.updated : null\n      },\n      feedEntries: function(){\n        return this.feed ? this.feed.entry : null\n      }\n    }\n  }\n\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: #2c3e50;\n    margin-top: 60px;\n  }\n</style>\n"]}]}