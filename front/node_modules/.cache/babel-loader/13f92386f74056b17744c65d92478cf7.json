{"remainingRequest":"/Users/jacobreburn/Development/govreader/node_modules/babel-loader/lib/index.js!/Users/jacobreburn/Development/govreader/node_modules/eslint-loader/index.js??ref--13-0!/Users/jacobreburn/Development/govreader/src/xmljson.js","dependencies":[{"path":"/Users/jacobreburn/Development/govreader/src/xmljson.js","mtime":1583769786203},{"path":"/Users/jacobreburn/Development/govreader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jacobreburn/Development/govreader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jacobreburn/Development/govreader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvamFjb2JyZWJ1cm4vRGV2ZWxvcG1lbnQvZ292cmVhZGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHhtbGpzb24oc3JjRE9NKSB7CiAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycwogIHZhciBjaGlsZHJlbiA9IF90b0NvbnN1bWFibGVBcnJheShzcmNET00uY2hpbGRyZW4pOyAvLyBiYXNlIGNhc2UgZm9yIHJlY3Vyc2lvbi4KCgogIGlmICghY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICBpZiAoc3JjRE9NLmhhc0F0dHJpYnV0ZXMoKSkgewogICAgICB2YXIgYXR0cnMgPSBzcmNET00uYXR0cmlidXRlczsKICAgICAgdmFyIG91dHB1dCA9IHt9OwoKICAgICAgZm9yICh2YXIgaSA9IGF0dHJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgb3V0cHV0W2F0dHJzW2ldLm5hbWVdID0gYXR0cnNbaV0udmFsdWU7CiAgICAgIH0KCiAgICAgIG91dHB1dC52YWx1ZSA9IHNyY0RPTS5pbm5lckhUTUw7CiAgICAgIHJldHVybiBvdXRwdXQ7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gc3JjRE9NLmlubmVySFRNTDsKICAgIH0KICB9IC8vIGluaXRpYWxpemluZyBvYmplY3QgdG8gYmUgcmV0dXJuZWQuCgoKICB2YXIganNvblJlc3VsdCA9IHt9OwogIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCgpIHsKICAgICAgdmFyIGNoaWxkID0gX3N0ZXAudmFsdWU7CiAgICAgIC8vIGNoZWNraW5nIGlzIGNoaWxkIGhhcyBzaWJsaW5ncyBvZiBzYW1lIG5hbWUuCiAgICAgIHZhciBjaGlsZElzQXJyYXkgPSBjaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24gKGVhY2hDaGlsZCkgewogICAgICAgIHJldHVybiBlYWNoQ2hpbGQubm9kZU5hbWUgPT09IGNoaWxkLm5vZGVOYW1lOwogICAgICB9KS5sZW5ndGggPiAxOyAvLyBpZiBjaGlsZCBpcyBhcnJheSwgc2F2ZSB0aGUgdmFsdWVzIGFzIGFycmF5LCBlbHNlIGFzIHN0cmluZ3MuCgogICAgICBpZiAoY2hpbGRJc0FycmF5KSB7CiAgICAgICAgaWYgKGpzb25SZXN1bHRbY2hpbGQubm9kZU5hbWVdID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGpzb25SZXN1bHRbY2hpbGQubm9kZU5hbWVdID0gW3htbGpzb24oY2hpbGQpXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAganNvblJlc3VsdFtjaGlsZC5ub2RlTmFtZV0ucHVzaCh4bWxqc29uKGNoaWxkKSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGpzb25SZXN1bHRbY2hpbGQubm9kZU5hbWVdID0geG1sanNvbihjaGlsZCk7CiAgICAgIH0KICAgIH07CgogICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gY2hpbGRyZW5bU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgIF9sb29wKCk7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgfQogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBqc29uUmVzdWx0Owp9"},{"version":3,"sources":["/Users/jacobreburn/Development/govreader/src/xmljson.js"],"names":["xmljson","srcDOM","children","length","hasAttributes","attrs","attributes","output","i","name","value","innerHTML","jsonResult","child","childIsArray","filter","eachChild","nodeName","undefined","push"],"mappings":";;;;;;;;;AAAA,eAAe,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAAE;AACtC,MAAIC,QAAQ,sBAAOD,MAAM,CAACC,QAAd,CAAZ,CADoC,CAGpC;;;AACA,MAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB;AAElB,QAAIF,MAAM,CAACG,aAAP,EAAJ,EAA4B;AACxB,UAAIC,KAAK,GAAGJ,MAAM,CAACK,UAAnB;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAGH,KAAK,CAACF,MAAN,GAAe,CAA3B,EAA8BK,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCD,QAAAA,MAAM,CAACF,KAAK,CAACG,CAAD,CAAL,CAASC,IAAV,CAAN,GAAwBJ,KAAK,CAACG,CAAD,CAAL,CAASE,KAAjC;AACH;;AAEDH,MAAAA,MAAM,CAACG,KAAP,GAAeT,MAAM,CAACU,SAAtB;AACA,aAAOJ,MAAP;AAEH,KAVD,MAUO;AACH,aAAON,MAAM,CAACU,SAAd;AACH;AACJ,GAnBmC,CAqBpC;;;AACA,MAAIC,UAAU,GAAG,EAAjB;AAtBoC;AAAA;AAAA;;AAAA;AAAA;AAAA,UAwB3BC,KAxB2B;AA0BhC;AACA,UAAIC,YAAY,GAAGZ,QAAQ,CAACa,MAAT,CAAgB,UAAAC,SAAS;AAAA,eAAIA,SAAS,CAACC,QAAV,KAAuBJ,KAAK,CAACI,QAAjC;AAAA,OAAzB,EAAoEd,MAApE,GAA6E,CAAhG,CA3BgC,CA6BhC;;AACA,UAAIW,YAAJ,EAAkB;AACd,YAAIF,UAAU,CAACC,KAAK,CAACI,QAAP,CAAV,KAA+BC,SAAnC,EAA8C;AAC1CN,UAAAA,UAAU,CAACC,KAAK,CAACI,QAAP,CAAV,GAA6B,CAACjB,OAAO,CAACa,KAAD,CAAR,CAA7B;AACH,SAFD,MAEO;AACHD,UAAAA,UAAU,CAACC,KAAK,CAACI,QAAP,CAAV,CAA2BE,IAA3B,CAAgCnB,OAAO,CAACa,KAAD,CAAvC;AACH;AACJ,OAND,MAMO;AACHD,QAAAA,UAAU,CAACC,KAAK,CAACI,QAAP,CAAV,GAA6BjB,OAAO,CAACa,KAAD,CAApC;AACH;AAtC+B;;AAwBpC,yBAAkBX,QAAlB,8HAA4B;AAAA;AAe3B;AAvCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyCpC,SAAOU,UAAP;AACH","sourcesContent":["export default function xmljson(srcDOM) { // eslint-disable-line no-unused-vars\n    let children = [...srcDOM.children];\n\n    // base case for recursion.\n    if (!children.length) {\n\n        if (srcDOM.hasAttributes()) {\n            var attrs = srcDOM.attributes;\n            var output = {};\n            for(var i = attrs.length - 1; i >= 0; i--) {\n                output[attrs[i].name] = attrs[i].value;\n            }\n\n            output.value = srcDOM.innerHTML;\n            return output;\n\n        } else {\n            return srcDOM.innerHTML\n        }\n    }\n\n    // initializing object to be returned.\n    let jsonResult = {};\n\n    for (let child of children) {\n\n        // checking is child has siblings of same name.\n        let childIsArray = children.filter(eachChild => eachChild.nodeName === child.nodeName).length > 1;\n\n        // if child is array, save the values as array, else as strings.\n        if (childIsArray) {\n            if (jsonResult[child.nodeName] === undefined) {\n                jsonResult[child.nodeName] = [xmljson(child)];\n            } else {\n                jsonResult[child.nodeName].push(xmljson(child));\n            }\n        } else {\n            jsonResult[child.nodeName] = xmljson(child);\n        }\n    }\n\n    return jsonResult;\n}"]}]}